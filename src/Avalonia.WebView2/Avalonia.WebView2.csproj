<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<IsPackable Condition="'$(Configuration)'=='Release'">true</IsPackable>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<RootNamespace>Avalonia</RootNamespace>
		<PackageId>WebView2.Avalonia</PackageId>
		<Description>
			The WebView2 control enables you to embed web technologies (HTML, CSS, and JavaScript) in your native applications powered by Microsoft Edge (Chromium).
			This package is necessary for Avalonia applications. To learn more about package versions checkout https://aka.ms/wv2-packageversion. To learn best practices checkout: https://aka.ms/wv2-bestpractices.
		</Description>
		<PackageTags>Web WebView Native native package Edge avalonia avaloniaui dotnet framework core Webview2</PackageTags>
		<Version>1.0.3240.44-preview.250518.2</Version>
	</PropertyGroup>

	<Choose>
		<!-- 👇 在 Windows 上开发 -->
		<When Condition="$([System.OperatingSystem]::IsWindows())">
			<PropertyGroup>
				<TargetFrameworks>net462;netstandard2.0;net6.0;net6.0-windows;net7.0;net7.0-windows;net8.0;net8.0-windows;net9.0;net9.0-windows</TargetFrameworks>
				<!-- 👇 当文件不存在时，添加需要工作负载的 TFM -->
				<!--<TargetFrameworks Condition="!Exists('C:\BD.Common8.ExcludeMobile.msbuild.prop')">$(TargetFrameworks);net9.0-android;net9.0-ios;net9.0-macos</TargetFrameworks>-->
				<TargetFrameworks Condition="!Exists('C:\BD.Common8.ExcludeMobile.msbuild.prop')">$(TargetFrameworks);net9.0-macos</TargetFrameworks>
			</PropertyGroup>
		</When>
		<!-- 👇 在 macOS 上开发 -->
		<When Condition="$([System.OperatingSystem]::IsMacOS())">
			<PropertyGroup>
				<!--<TargetFrameworks>net9.0-ios;net9.0-macos</TargetFrameworks>-->
				<TargetFrameworks>net9.0-macos</TargetFrameworks>
			</PropertyGroup>
		</When>
		<!-- 👇 在 Linux 上开发 -->
		<Otherwise>
			<PropertyGroup>
				<TargetFrameworks>net9.0</TargetFrameworks>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<!-- 👇 将无-后缀的 TFM 视作 Linux 平台，设置 DefineConstants -->
	<PropertyGroup>
		<DefineConstants Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == ''">LINUX;$(DefineConstants)</DefineConstants>
	</PropertyGroup>


	<ItemGroup>
		<AvaloniaXaml Include="**\*.xaml" />
	</ItemGroup>

	<!-- 👇 引用 NuGet 包 -->
	<ItemGroup>
		<PackageReference Include="Avalonia" />
		<PackageReference Include="Utf8StringInterpolation" />
		<PackageReference Include="Microsoft.IO.RecyclableMemoryStream" />
	</ItemGroup>

	<!-- .NET Framework 4.x -->
	<ItemGroup Condition="$(TargetFramework.StartsWith('net4')) OR $(TargetFramework.StartsWith('netstandard1')) OR $(TargetFramework.StartsWith('netstandard2.0'))">
		<Reference Condition="$(TargetFramework.StartsWith('net4'))" Include="System.Web" />
		<PackageReference Include="IndexRange" />
		<!--<PackageReference Include="System.Collections.Immutable" />-->
	</ItemGroup>

	<!-- 不兼容 .NET 9.x 时 -->
	<ItemGroup Condition="!$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net9.0'))">
		<PackageReference Include="System.Text.Json" />
	</ItemGroup>

	<Choose>
		<!-- .NET Framework OR netx.y-windows -->
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' OR $(TargetFramework.StartsWith('net4'))">
			<ItemGroup>
				<PackageReference Include="WebView2.NativeAssets.Win32" />
				<PackageReference Include="Microsoft.Windows.CsWin32">
					<PrivateAssets>all</PrivateAssets>
					<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
				</PackageReference>
				<AdditionalFiles Condition="Exists('$(MSBuildProjectDirectory)\NativeMethods.txt')" Include="$(MSBuildProjectDirectory)\NativeMethods.txt" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
			<ItemGroup>
				<PackageReference Include="Avalonia.Android" />
				<PackageReference Include="Xamarin.AndroidX.WebKit" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
			<!-- Avalonia.iOS 包似乎不兼容 -maccatalyst TFM -->
			<!--<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">-->
			<ItemGroup>
				<PackageReference Include="Avalonia.iOS" />
			</ItemGroup>
		</When>
	</Choose>

	<ItemGroup Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0')) AND ($([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == '' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos')">
		<!--<PackageReference Include="CefGlue.Avalonia" />-->
		<!--<PackageReference Include="WebViewControl-Avalonia" />-->
		<!--<ProjectReference Include="..\CefGlue.Avalonia\CefGlue.Avalonia.csproj" />-->
		<PackageReference Include="Avalonia.ReactiveUI" />
	</ItemGroup>

	<Import Project="..\GeneratePackage.props" />

	<!--<Import Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'" Project="..\Microsoft.Maui.WebView\Microsoft.Maui.WebView.projitems" Label="Shared" />-->

	<Import Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0')) AND ($([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == '' OR $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos')" Project="$(MSBuildThisFileDirectory)..\..\ref\CefGlue.Avalonia.props"/>
</Project>
