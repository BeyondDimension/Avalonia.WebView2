<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>

	<Choose>
		<!-- 👇 在 Windows 上开发 -->
		<When Condition="$([System.OperatingSystem]::IsWindows())">
			<PropertyGroup>
				<TargetFrameworks>net9.0-windows;net9.0;net9.0-macos</TargetFrameworks>
			</PropertyGroup>
		</When>
		<!-- 👇 在 macOS 上开发 -->
		<When Condition="$([System.OperatingSystem]::IsMacOS())">
			<PropertyGroup>
				<TargetFrameworks>net9.0;net9.0-macos</TargetFrameworks>
			</PropertyGroup>
		</When>
		<!-- 👇 在 Linux 上开发 -->
		<Otherwise>
			<PropertyGroup>
				<TargetFrameworks>net9.0</TargetFrameworks>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<!-- 👇 将无-后缀的 TFM 视作 Linux 平台，设置 DefineConstants -->
	<PropertyGroup>
		<DefineConstants Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == ''">LINUX;$(DefineConstants)</DefineConstants>
	</PropertyGroup>

	<Choose>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">
			<PropertyGroup>
				<OutputType>WinExe</OutputType>
				<ApplicationManifest>Properties\app.manifest</ApplicationManifest>
			</PropertyGroup>
			<!--<ItemGroup>
				<ProjectReference Include="..\Avalonia.Ref\Avalonia.Desktop\Avalonia.Desktop.csproj" />
				<ProjectReference Include="..\Avalonia.Ref\Avalonia.Native\Avalonia.Native.csproj" />
				<ProjectReference Include="..\Avalonia.Ref\Avalonia.X11\Avalonia.X11.csproj" />
			</ItemGroup>-->
		</When>
		<!--<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
			<ItemGroup>
				<PackageReference Include="Avalonia.Desktop" />
				<PackageReference Include="Avalonia.Native" />
			</ItemGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == ''">
			<ItemGroup>
				<PackageReference Include="Avalonia.Desktop" />
				<PackageReference Include="Avalonia.X11" />
			</ItemGroup>
		</When>-->
		<Otherwise>
			<PropertyGroup>
				<OutputType>Exe</OutputType>
			</PropertyGroup>
		</Otherwise>
	</Choose>


	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<AllowedReferenceRelatedFileExtensions>
			<!-- Prevent default XML and PDB files copied to output in RELEASE. 
           Only *.allowedextension files will be included, which doesn't exist in my case.
       -->
			.allowedextension
		</AllowedReferenceRelatedFileExtensions>
		<DebugType>none</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="..\Avalonia.WebView2.Sample.Mobile\SampleHelper.cs">
			<LinkBase></LinkBase>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<AvaloniaXaml Include="**\*.xaml" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="FluentAvaloniaUI" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Avalonia.WebView2\Avalonia.WebView2.csproj" />
	</ItemGroup>

	<Import Project="$(MSBuildThisFileDirectory)..\..\ref\Avalonia.$(AvaloniaRef).props" />
</Project>
